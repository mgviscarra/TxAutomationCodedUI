// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CalculatorAppDataDriven
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// 1 + 2 = 3
        /// </summary>
        public void AddNumbers()
        {
            #region Variable Declarations
            WinButton uIItem1Button = this.UICalculatorWindow.UIItemWindow.UIItem1Button;
            WinButton uIAddButton = this.UICalculatorWindow.UIItemWindow1.UIAddButton;
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(23, 18));

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(11, 18));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(17, 18));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(12, 30));
        }
        
        /// <summary>
        /// ValidateSum - Use 'ValidateSumExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSum()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '3'
            Assert.AreEqual(this.ValidateSumExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText);
        }
        
        /// <summary>
        /// 5 - 2 = 3
        /// </summary>
        public void SubstractNumbers()
        {
            #region Variable Declarations
            WinButton uIItem5Button = this.UICalculatorWindow.UIItemWindow4.UIItem5Button;
            WinButton uISubtractButton = this.UICalculatorWindow.UIItemWindow11.UISubtractButton;
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(17, 13));

            // Click 'Subtract' button
            Mouse.Click(uISubtractButton, new Point(24, 22));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(17, 14));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(15, 34));
        }
        
        /// <summary>
        /// ValidateSubstraction - Use 'ValidateSubstractionExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSubstraction()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '3'
            Assert.AreEqual(this.ValidateSubstractionExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText);
        }
        
        /// <summary>
        /// MultiplyNumbers
        /// </summary>
        public void MultiplyNumbers()
        {
            #region Variable Declarations
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIMultiplyButton = this.UICalculatorWindow.UIItemWindow12.UIMultiplyButton;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(19, 11));

            // Click 'Multiply' button
            Mouse.Click(uIMultiplyButton, new Point(22, 16));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(14, 18));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(18, 35));
        }
        
        /// <summary>
        /// ValidateMultiplication - Use 'ValidateMultiplicationExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMultiplication()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '4'
            Assert.AreEqual(this.ValidateMultiplicationExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText);
        }
        
        /// <summary>
        /// MultiplyNumbersV1
        /// </summary>
        public void MultiplyNumbersV1()
        {
            #region Variable Declarations
            WinButton uIItem7Button = this.UICalculatorWindow.UIItemWindow5.UIItem7Button;
            WinButton uIMultiplyButton = this.UICalculatorWindow.UIItemWindow12.UIMultiplyButton;
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '7' button
            Mouse.Click(uIItem7Button, new Point(18, 21));

            // Click 'Multiply' button
            Mouse.Click(uIMultiplyButton, new Point(19, 15));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(15, 20));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(24, 24));
        }
        
        /// <summary>
        /// ValidateMultiplicationV1 - Use 'ValidateMultiplicationV1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateMultiplicationV1()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '14'
            Assert.AreEqual(this.ValidateMultiplicationV1ExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText);
        }
        
        /// <summary>
        /// DivideNumbers
        /// </summary>
        public void DivideNumbers()
        {
            #region Variable Declarations
            WinButton uIItem8Button = this.UICalculatorWindow.UIItemWindow6.UIItem8Button;
            WinButton uIDivideButton = this.UICalculatorWindow.UIItemWindow13.UIDivideButton;
            WinButton uIItem4Button = this.UICalculatorWindow.UIItemWindow21.UIItem4Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(19, 15));

            // Click 'Divide' button
            Mouse.Click(uIDivideButton, new Point(15, 18));

            // Click '4' button
            Mouse.Click(uIItem4Button, new Point(19, 16));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(19, 32));
        }
        
        /// <summary>
        /// ValidateDivision - Use 'ValidateDivisionExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateDivision()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'DisplayText' property of '3' label equals '2'
            Assert.AreEqual(this.ValidateDivisionExpectedValues.UIItem3TextDisplayText, uIItem3Text.DisplayText);
        }
        
        #region Properties
        public virtual ValidateSumExpectedValues ValidateSumExpectedValues
        {
            get
            {
                if ((this.mValidateSumExpectedValues == null))
                {
                    this.mValidateSumExpectedValues = new ValidateSumExpectedValues();
                }
                return this.mValidateSumExpectedValues;
            }
        }
        
        public virtual ValidateSubstractionExpectedValues ValidateSubstractionExpectedValues
        {
            get
            {
                if ((this.mValidateSubstractionExpectedValues == null))
                {
                    this.mValidateSubstractionExpectedValues = new ValidateSubstractionExpectedValues();
                }
                return this.mValidateSubstractionExpectedValues;
            }
        }
        
        public virtual ValidateMultiplicationExpectedValues ValidateMultiplicationExpectedValues
        {
            get
            {
                if ((this.mValidateMultiplicationExpectedValues == null))
                {
                    this.mValidateMultiplicationExpectedValues = new ValidateMultiplicationExpectedValues();
                }
                return this.mValidateMultiplicationExpectedValues;
            }
        }
        
        public virtual ValidateMultiplicationV1ExpectedValues ValidateMultiplicationV1ExpectedValues
        {
            get
            {
                if ((this.mValidateMultiplicationV1ExpectedValues == null))
                {
                    this.mValidateMultiplicationV1ExpectedValues = new ValidateMultiplicationV1ExpectedValues();
                }
                return this.mValidateMultiplicationV1ExpectedValues;
            }
        }
        
        public virtual ValidateDivisionExpectedValues ValidateDivisionExpectedValues
        {
            get
            {
                if ((this.mValidateDivisionExpectedValues == null))
                {
                    this.mValidateDivisionExpectedValues = new ValidateDivisionExpectedValues();
                }
                return this.mValidateDivisionExpectedValues;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateSumExpectedValues mValidateSumExpectedValues;
        
        private ValidateSubstractionExpectedValues mValidateSubstractionExpectedValues;
        
        private ValidateMultiplicationExpectedValues mValidateMultiplicationExpectedValues;
        
        private ValidateMultiplicationV1ExpectedValues mValidateMultiplicationV1ExpectedValues;
        
        private ValidateDivisionExpectedValues mValidateDivisionExpectedValues;
        
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSum'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSumExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '3'
        /// </summary>
        public string UIItem3TextDisplayText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSubstraction'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateSubstractionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '3'
        /// </summary>
        public string UIItem3TextDisplayText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMultiplication'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMultiplicationExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '4'
        /// </summary>
        public string UIItem3TextDisplayText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateMultiplicationV1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateMultiplicationV1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '14'
        /// </summary>
        public string UIItem3TextDisplayText = "14";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateDivision'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ValidateDivisionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '3' label equals '2'
        /// </summary>
        public string UIItem3TextDisplayText = "2";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItem3Window UIItem3Window
        {
            get
            {
                if ((this.mUIItem3Window == null))
                {
                    this.mUIItem3Window = new UIItem3Window(this);
                }
                return this.mUIItem3Window;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow11 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow12 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6(this);
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIItemWindow13 UIItemWindow13
        {
            get
            {
                if ((this.mUIItemWindow13 == null))
                {
                    this.mUIItemWindow13 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow13;
            }
        }
        
        public UIItemWindow21 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow21;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItem3Window mUIItem3Window;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow11 mUIItemWindow11;
        
        private UIItemWindow12 mUIItemWindow12;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIItemWindow13 mUIItemWindow13;
        
        private UIItemWindow21 mUIItemWindow21;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "131";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "1";
                    this.mUIItem1Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "132";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    this.mUIItem2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem3Window : WinWindow
    {
        
        public UIItem3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UIItem3Text
        {
            get
            {
                if ((this.mUIItem3Text == null))
                {
                    this.mUIItem3Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem3Text.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    this.mUIItem3Text.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem3Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem3Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "135";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WinButton.PropertyNames.Name] = "5";
                    this.mUIItem5Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem5Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "94";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UISubtractButton
        {
            get
            {
                if ((this.mUISubtractButton == null))
                {
                    this.mUISubtractButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISubtractButton.SearchProperties[WinButton.PropertyNames.Name] = "Subtract";
                    this.mUISubtractButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUISubtractButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISubtractButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "92";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMultiplyButton
        {
            get
            {
                if ((this.mUIMultiplyButton == null))
                {
                    this.mUIMultiplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMultiplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Multiply";
                    this.mUIMultiplyButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMultiplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMultiplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "137";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem7Button
        {
            get
            {
                if ((this.mUIItem7Button == null))
                {
                    this.mUIItem7Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem7Button.SearchProperties[WinButton.PropertyNames.Name] = "7";
                    this.mUIItem7Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem7Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem7Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "138";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem8Button.SearchProperties[WinButton.PropertyNames.Name] = "8";
                    this.mUIItem8Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem8Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "91";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIDivideButton
        {
            get
            {
                if ((this.mUIDivideButton == null))
                {
                    this.mUIDivideButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDivideButton.SearchProperties[WinButton.PropertyNames.Name] = "Divide";
                    this.mUIDivideButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIDivideButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDivideButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "134";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem4Button
        {
            get
            {
                if ((this.mUIItem4Button == null))
                {
                    this.mUIItem4Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem4Button.SearchProperties[WinButton.PropertyNames.Name] = "4";
                    this.mUIItem4Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem4Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem4Button;
        #endregion
    }
}
