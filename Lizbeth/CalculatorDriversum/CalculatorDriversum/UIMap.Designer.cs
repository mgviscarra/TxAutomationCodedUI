// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CalculatorDriversum
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Click5
        /// </summary>
        public void Click5()
        {
            #region Variable Declarations
            WinButton uIItem5Button = this.UICalculatorWindow.UIItemWindow.UIItem5Button;
            #endregion

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(20, 12));
        }
        
        /// <summary>
        /// ClickSum
        /// </summary>
        public void ClickSum()
        {
            #region Variable Declarations
            WinButton uIAddButton = this.UICalculatorWindow.UIItemWindow1.UIAddButton;
            #endregion

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(20, 8));
        }
        
        /// <summary>
        /// Click6
        /// </summary>
        public void Click6()
        {
            #region Variable Declarations
            WinButton uIItem6Button = this.UICalculatorWindow.UIItemWindow2.UIItem6Button;
            #endregion

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(9, 16));
        }
        
        /// <summary>
        /// ClickEquals
        /// </summary>
        public void ClickEquals()
        {
            #region Variable Declarations
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(24, 13));
        }
        
        /// <summary>
        /// AssertEquals - Use 'AssertEqualsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertEquals()
        {
            #region Variable Declarations
            WinText uIItem11Text = this.UICalculatorWindow.UIItem11Window.UIItem11Text;
            #endregion

            // Verify that the 'DisplayText' property of '11' label equals '11'
            Assert.AreEqual(this.AssertEqualsExpectedValues.UIItem11TextDisplayText, uIItem11Text.DisplayText);
        }
        
        /// <summary>
        /// ClickClosetCalc
        /// </summary>
        public void ClickClosetCalc()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UICalculatorWindow.UICalculatorTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(22, 12));
        }
        
        #region Properties
        public virtual AssertEqualsExpectedValues AssertEqualsExpectedValues
        {
            get
            {
                if ((this.mAssertEqualsExpectedValues == null))
                {
                    this.mAssertEqualsExpectedValues = new AssertEqualsExpectedValues();
                }
                return this.mAssertEqualsExpectedValues;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertEqualsExpectedValues mAssertEqualsExpectedValues;
        
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertEquals'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertEqualsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '11' label equals '11'
        /// </summary>
        public string UIItem11TextDisplayText = "11";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItem11Window UIItem11Window
        {
            get
            {
                if ((this.mUIItem11Window == null))
                {
                    this.mUIItem11Window = new UIItem11Window(this);
                }
                return this.mUIItem11Window;
            }
        }
        
        public UICalculatorTitleBar UICalculatorTitleBar
        {
            get
            {
                if ((this.mUICalculatorTitleBar == null))
                {
                    this.mUICalculatorTitleBar = new UICalculatorTitleBar(this);
                }
                return this.mUICalculatorTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItem11Window mUIItem11Window;
        
        private UICalculatorTitleBar mUICalculatorTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "135";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WinButton.PropertyNames.Name] = "5";
                    this.mUIItem5Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem5Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "136";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem6Button
        {
            get
            {
                if ((this.mUIItem6Button == null))
                {
                    this.mUIItem6Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem6Button.SearchProperties[WinButton.PropertyNames.Name] = "6";
                    this.mUIItem6Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem6Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem6Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem11Window : WinWindow
    {
        
        public UIItem11Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UIItem11Text
        {
            get
            {
                if ((this.mUIItem11Text == null))
                {
                    this.mUIItem11Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem11Text.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    this.mUIItem11Text.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem11Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem11Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICalculatorTitleBar : WinTitleBar
    {
        
        public UICalculatorTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
